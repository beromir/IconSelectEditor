{
  "version": 3,
  "sources": ["../../node_modules/@neos-project/neos-ui-extensibility/src/readFromConsumerApi.ts", "../../node_modules/@neos-project/neos-ui-extensibility/src/shims/vendor/react/index.js", "../../node_modules/@neos-project/neos-ui-extensibility/src/shims/vendor/prop-types/index.js", "../../node_modules/@neos-project/neos-ui-extensibility/src/shims/neosProjectPackages/react-ui-components/index.js", "../../node_modules/@neos-project/neos-ui-extensibility/src/shims/neosProjectPackages/neos-ui-decorators/index.js", "../../node_modules/@neos-project/neos-ui-extensibility/src/shims/vendor/react-redux/index.js", "../../node_modules/@neos-project/neos-ui-extensibility/src/shims/neosProjectPackages/neos-ui-redux-store/index.js", "../../node_modules/@neos-project/neos-ui-extensibility/src/index.ts", "../Private/Editor/IconSelectEditor/index.jsx", "../../node_modules/clsx/dist/clsx.mjs", "../Private/Editor/manifest.js"],
  "sourcesContent": [null, null, null, null, null, null, null, null, "import React, {useState, useEffect} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Icon, DropDown} from \"@neos-project/react-ui-components\";\nimport {neos} from \"@neos-project/neos-ui-decorators\";\nimport style from \"./style.module.css\";\nimport {connect} from \"react-redux\";\nimport {selectors} from \"@neos-project/neos-ui-redux-store\";\nimport clsx from \"clsx\";\n\nconst getDataLoaderOptionsForProps = (props) => ({\n    contextNodePath: props.focusedNodePath,\n    dataSourceIdentifier: 'medienreaktor-iconselecteditor-icon-sources',\n    dataSourceAdditionalData: props.options.iconSources,\n    dataSourceDisableCaching: false,\n});\n\nconst defaultOptions = {\n    iconSources: [],\n};\n\nfunction Editor(props) {\n    const mergedOptions = {...defaultOptions, ...props.options};\n    const {value, commit, highlight, i18nRegistry, dataSourcesDataLoader} = props;\n\n    const [isOpen, setIsOpen] = useState(false);\n    const [isLoading, setIsLoading] = useState(true);\n    const [options, setOptions] = useState([]);\n    const [icons, setIcons] = useState([]);\n    const [searchString, setSearchString] = useState('');\n    const [selectedIconSource, setSelectedIconSource] = useState('');\n    const [selectedIcon, setSelectedIcon] = useState(null);\n\n    useEffect(() => {\n        // Load options from data source\n        dataSourcesDataLoader.resolveValue(getDataLoaderOptionsForProps(props), value).then((values) => {\n            setIsLoading(false);\n            setOptions(values);\n\n            if (!icons.length) {\n                setIcons(values.iconSources[0]);\n                setSelectedIconSource(values.iconSourceNames[0]);\n            }\n\n            if (!selectedIcon && !Array.isArray(value)) {\n                setIcons(values.iconSources[values.iconSourceNames.indexOf(value.sourceName)]);\n                setSelectedIconSource(value.sourceName);\n                setSelectedIcon(value);\n            }\n        });\n    }, [mergedOptions]);\n\n    if (isLoading) {\n        return (\n            <div className={clsx(style.wrapper, style.loading)} title=\"Loading\">\n                <Icon icon=\"spinner\" size=\"lg\" spin/>\n            </div>\n        );\n    }\n\n    function handleIconSourceSelection(index) {\n        setIcons(options.iconSources[index]);\n        setSelectedIconSource(options.iconSourceNames[index]);\n        setSearchString('');\n    }\n\n    function handleIconSelection(icon) {\n        setSelectedIcon(icon);\n        setIsOpen(false);\n        commit({\n            resourceUri: icon.resourceUri,\n            sourceName: icon.sourceName,\n            label: icon.label,\n        });\n    }\n\n    return (\n        <>\n            <DropDown.Stateless isOpen={isOpen} onToggle={() => setIsOpen(!isOpen)} onClose={() => false}>\n                <DropDown.Header>{selectedIcon?.label}</DropDown.Header>\n                <DropDown.Contents scrollable={true} className{...style.dropdownContent}>\n                    <div className={style.stickyHeader}>\n                        <div className={style.tabs}>\n                            {options.iconSourceNames?.map((option, index) =>\n                                <button onClick={() => handleIconSourceSelection(index)} type=\"button\"\n                                        data-selected={selectedIconSource === option}\n                                        data-selected-source={selectedIcon?.sourceName === option}\n                                        className={style.tab}>\n                                    {option}\n                                </button>\n                            )}\n                        </div>\n\n                        <input onInput={e => setSearchString(e.target.value)}\n                               value={searchString} type=\"text\" placeholder=\"search...\"\n                               className={style.searchInput}/>\n                    </div>\n\n                    <ul className={style.iconList}>\n                        {icons.filter(icon => icon.label.toLowerCase().includes(searchString)).map((item) => {\n                            return (\n                                <li title={item.label} className={style.iconWrapper}>\n                                    <button onClick={() => handleIconSelection(item)} type=\"button\"\n                                            data-selected={selectedIcon?.resourceUri === item?.resourceUri}\n                                            className={style.iconButton}>\n                                            <span className={style.icon}\n                                                  dangerouslySetInnerHTML={{__html: item.icon}}></span>\n                                    </button>\n                                </li>\n                            );\n                        })}\n                    </ul>\n                </DropDown.Contents>\n            </DropDown.Stateless>\n        </>\n    );\n}\n\nEditor.propTypes = {\n    value: PropTypes.string,\n    commit: PropTypes.func.isRequired,\n    i18nRegistry: PropTypes.object.isRequired,\n    options: PropTypes.shape({\n        iconSources: PropTypes.arrayOf(\n            PropTypes.shape({\n                name: PropTypes.string,\n                path: PropTypes.string,\n            }),\n        ),\n    }).isRequired,\n};\n\nconst neosifier = neos((globalRegistry) => ({\n    i18nRegistry: globalRegistry.get(\"i18n\"),\n    dataSourcesDataLoader: globalRegistry.get(\"dataLoaders\").get(\"DataSources\"),\n}));\nconst connector = connect((state) => ({\n    focusedNodePath: selectors.CR.Nodes.focusedNodePathSelector(state),\n}));\nexport default neosifier(connector(Editor));\n", "function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;", "import manifest from \"@neos-project/neos-ui-extensibility\";\n\nimport IconSelectEditor from \"./IconSelectEditor\";\n\nmanifest(\"Medienreaktor.IconSelectEditor:Editor\", {}, (globalRegistry) => {\n    const editorsRegistry = globalRegistry.get(\"inspector\").get(\"editors\");\n\n    editorsRegistry.set(\"Medienreaktor.IconSelectEditor/Editor\", {\n        component: IconSelectEditor,\n    });\n});\n"],
  "mappings": "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",
  "names": ["React", "PropTypes"]
}
